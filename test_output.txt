
┌─────────────────────────────────────────────────────────┐
│ A new version of Flutter is available!                  │
│                                                         │
│ To update to the latest version, run "flutter upgrade". │
└─────────────────────────────────────────────────────────┘
Resolving dependencies...
Downloading packages...
  characters 1.4.0 (1.4.1 available)
  file_picker 6.2.1 (10.3.3 available)
  flutter_launcher_icons 0.13.1 (0.14.4 available)
  flutter_lints 3.0.2 (6.0.0 available)
  flutter_plugin_android_lifecycle 2.0.30 (2.0.31 available)
  google_fonts 6.3.1 (6.3.2 available)
  intl 0.19.0 (0.20.2 available)
  lints 3.0.0 (6.0.0 available)
  material_color_utilities 0.11.1 (0.13.0 available)
  meta 1.16.0 (1.17.0 available)
  path_provider_android 2.2.18 (2.2.19 available)
  shared_preferences_android 2.4.13 (2.4.15 available)
  test_api 0.7.6 (0.7.7 available)
  win32 5.14.0 (5.15.0 available)
Got dependencies!
14 packages have newer versions incompatible with dependency constraints.
Try `flutter pub outdated` for more information.
Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

00:00 +0: loading /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart                                                                                                 Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

Package file_picker:linux references file_picker:linux as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: linux: default_package: file_picker` or add an inline implementation to file_picker via `platforms: linux:` `pluginClass` or `dartPluginClass`.

Package file_picker:macos references file_picker:macos as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: macos: default_package: file_picker` or add an inline implementation to file_picker via `platforms: macos:` `pluginClass` or `dartPluginClass`.

Package file_picker:windows references file_picker:windows as the default plugin, but it does not provide an inline implementation.
Ask the maintainers of file_picker to either avoid referencing a default implementation via `platforms: windows: default_package: file_picker` or add an inline implementation to file_picker via `platforms: windows:` `pluginClass` or `dartPluginClass`.

00:01 +0: loading /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart                                                                                                 00:01 +0: loading /Users/presto/Documents/conference_agenda_tracker/test/unit/calendar_service_test.dart                                                                                               00:01 +0: /Users/presto/Documents/conference_agenda_tracker/test/unit/calendar_service_test.dart: CalendarService Tests should parse basic ICS content                                                 00:01 +1: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +2: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +3: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +4: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +5: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +6: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +7: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +8: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +9: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                                00:01 +10: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                               00:01 +11: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                               00:01 +12: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                               00:01 +13: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should start with empty events list                                               00:01 +14: /Users/presto/Documents/conference_agenda_tracker/test/widget/event_card_test.dart: EventCard Widget Tests should display event title                                                       00:01 +15: /Users/presto/Documents/conference_agenda_tracker/test/widget/event_card_test.dart: EventCard Widget Tests should display event title                                                       00:01 +16: /Users/presto/Documents/conference_agenda_tracker/test/widget/event_card_test.dart: EventCard Widget Tests should display event title                                                       00:01 +17: /Users/presto/Documents/conference_agenda_tracker/test/widget/event_card_test.dart: EventCard Widget Tests should display event title                                                       00:01 +18: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should update event priority                                                      00:01 +19: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should update event priority                                                      00:01 +20: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should update event priority                                                      00:01 +21: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should update event priority                                                      00:01 +22: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should display overview stats when events exist                        00:01 +23: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should display overview stats when events exist                        00:01 +24: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return events by priority correctly                                        00:01 +25: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return events by priority correctly                                        00:01 +26: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return events by priority correctly                                        00:01 +27: /Users/presto/Documents/conference_agenda_tracker/test/widget/event_card_test.dart: EventCard Widget Tests should handle tap events                                                         00:01 +28: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should display topic cloud when events have titles                     00:01 +29: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +30: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +31: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +32: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +33: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +34: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +35: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should return only selected events                                                00:01 +36: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should handle filter changes                                           00:02 +36: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should handle filter changes                                           00:02 +37: /Users/presto/Documents/conference_agenda_tracker/test/widget/insights_screen_test.dart: InsightsScreen Widget Tests should handle filter changes                                           00:02 +38: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle loading state                                                       00:02 +39: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle loading state                                                       00:02 +40: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle loading state                                                       00:02 +41: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle loading state                                                       00:02 +42: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle loading state                                                       00:02 +42: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle error messages                                                      00:02 +43: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should handle error messages                                                      00:02 +43: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should not add duplicate events                                                   00:02 +44: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should not add duplicate events                                                   00:03 +44: /Users/presto/Documents/conference_agenda_tracker/test/unit/event_provider_test.dart: EventProvider Tests should not add duplicate events                                                   00:03 +44: loading /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart                                                                                                             00:03 +44: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app starts with splash screen                                                                  00:03 +45: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app starts with splash screen                                                                  00:03 +45: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app transitions to home screen                                                                 00:03 +46: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app transitions to home screen                                                                 00:03 +46: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests navigation tabs work correctly                                                                 00:03 +47: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests navigation tabs work correctly                                                                 00:03 +47: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests fun tab loads correctly                                                                        00:03 +48: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests fun tab loads correctly                                                                        00:03 +48: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests insights tab loads correctly                                                                   00:03 +49: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests insights tab loads correctly                                                                   00:03 +49: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app shows clear all button when events exist                                                   00:03 +50: /Users/presto/Documents/conference_agenda_tracker/test/widget_test.dart: EventFlow App Tests app shows clear all button when events exist                                                   00:03 +50: All tests passed!                                                                                                                                                                           
