name: EventFlow iOS CI/CD Pipeline

on:
  push:
    branches: [ main, develop, 'feature/**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test & Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.4'
        cache: true
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Install lcov for coverage reports
      run: sudo apt-get update && sudo apt-get install -y lcov
    
    - name: Create test reports directory
      run: mkdir -p test_reports coverage
    
    - name: Verify formatting
      run: dart format --output=none --set-exit-if-changed lib test
    
    - name: Analyze project source
      run: flutter analyze --fatal-infos | tee test_reports/analysis.txt
    
    - name: Run unit tests with coverage
      run: flutter test -j 1 --coverage --reporter expanded | tee test_reports/tests.txt
    
    - name: Generate coverage report
      if: always()
      run: |
        if [ -f coverage/lcov.info ]; then
          lcov --summary coverage/lcov.info > test_reports/coverage_summary.txt 2>&1 || true
        else
          echo "No coverage data generated" > test_reports/coverage_summary.txt
        fi
    
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports
        path: test_reports/
    
    - name: Upload coverage reports  
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: coverage/
        
    - name: Generate HTML coverage report
      if: always()
      run: |
        if [ -f coverage/lcov.info ]; then
          genhtml coverage/lcov.info -o coverage/html
          echo "ðŸ“Š Coverage report generated at coverage/html/index.html"
        fi
    
    # Auto-feedback disabled - manual review preferred
    # - name: Auto-generate agent feedback on failure
    #   if: failure()
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   run: |
    #     python3 scripts/auto_ci_feedback.py

  build:
    name: iOS Build
    runs-on: macos-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.4'
        cache: true
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build iOS (no signing)
      run: flutter build ios --no-codesign --debug
    
    - name: Upload iOS build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app
